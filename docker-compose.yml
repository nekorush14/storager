version: '3.8'

services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-storager_development}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-storager_development}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY:-placeholder}
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/rails
      - bundle_cache:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true
    command: bash -c "bundle install && rails db:prepare && rails server -b 0.0.0.0"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    stdin_open: true
    tty: true

  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "80:80"
    depends_on:
      - backend
    profiles:
      - production

volumes:
  postgres_data:
  bundle_cache: